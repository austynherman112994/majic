import os
import json

from sunstrike_component.types import MultiProcessingType, EventStreamingPlatform, CacheType, FunctionTemplate

# CONCURRENCY CONFIGURATION
SUNSTRIKE_COMPONENT_CONCURRENCY = os.environ.get("SUNSTRIKE_COMPONENT_CONCURRENCY")
SUNSTRIKE_COMPONENT_MULTIPROCESSING_TYPE = MultiProcessingType(
    os.environ.get("SUNSTRIKE_COMPONENT_MULTIPROCESSING_TYPE"))

# EVENT STREAMING PLATFORM
SUNSTRIKE_EVENT_CONSUMER_TYPE = EventStreamingPlatform(
    os.environ.get("SUNSTRIKE_EVENT_CONSUMER_TYPE")
)
SUNSTRIKE_EVENT_PRODUCER_TYPE = EventStreamingPlatform(
    os.environ.get("SUNSTRIKE_EVENT_PRODUCER_TYPE")
)
SUNSTRIKE_INPUT_TOPICS = os.environ.get('SUNSTRIKE_INPUT_TOPICS', "").split()
SUNSTRIKE_OUTPUT_TOPIC = os.environ.get('SUNSTRIKE_OUTPUT_TOPIC', "")
SUNSTRIKE_SUBSCRIBER = os.environ.get('SUNSTRIKE_SUBSCRIBER', "")

# PULSAR
SUNSTRIKE_PULSAR_HOST = os.environ.get("SUNSTRIKE_PULSAR_HOST")

# CACHE
SUNSTRIKE_CACHE_TYPE = CacheType(os.environ.get("SUNSTRIKE_CACHE_TYPE"))
SUNSTRIKE_REDIS_PORT = os.environ.get("SUNSTRIKE_REDIS_PORT")
SUNSTRIKE_REDIS_HOST = os.environ.get("SUNSTRIKE_REDIS_HOST")


# TEMPLATE
SUNSTRIKE_FUNCTION_TEMPLATE = FunctionTemplate(**json.loads(os.environ.get("SUNSTRIKE_FUNCTION_TEMPLATE", "{}")))

# TIMEOUT
SUNSTRIKE_FUNCTION_TIMEOUT = os.environ.get("SUNSTRIKE_FUNCTION_TIMEOUT")

# RUNNER
SUNSTRIKE_RUNNER_ID = os.environ.get("SUNSTRIKE_RUNNER_ID")
